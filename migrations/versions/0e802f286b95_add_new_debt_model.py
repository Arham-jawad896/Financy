"""Add new debt model

Revision ID: 0e802f286b95
Revises: 
Create Date: 2024-10-08 16:43:18.702314

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0e802f286b95'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transaction')
    op.drop_table('debt')
    op.drop_table('expenses')
    op.drop_table('budgets')
    with op.batch_alter_table('debts', schema=None) as batch_op:
        batch_op.add_column(sa.Column('paid_on', sa.DateTime(), nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')

    with op.batch_alter_table('transactions', schema=None) as batch_op:
        batch_op.alter_column('description',
               existing_type=sa.VARCHAR(length=250),
               type_=sa.String(length=200),
               nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('transactions', schema=None) as batch_op:
        batch_op.alter_column('description',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=250),
               nullable=True)

    with op.batch_alter_table('debts', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['id'])
        batch_op.drop_column('paid_on')

    op.create_table('budgets',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('category', sa.VARCHAR(length=100), nullable=True),
    sa.Column('amount', sa.FLOAT(), nullable=True),
    sa.Column('date', sa.DATE(), nullable=True),
    sa.Column('budget_type', sa.VARCHAR(length=50), nullable=True),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('expenses',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('amount', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.Column('category', sa.VARCHAR(length=50), nullable=False),
    sa.Column('date', sa.DATE(), nullable=False),
    sa.Column('description', sa.VARCHAR(length=255), nullable=True),
    sa.Column('budget_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['budget_id'], ['budgets.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('debt',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('creditor_name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('debt_amount', sa.FLOAT(), nullable=False),
    sa.Column('remaining_balance', sa.FLOAT(), nullable=False),
    sa.Column('due_date', sa.DATE(), nullable=False),
    sa.Column('interest_rate', sa.FLOAT(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('is_paid', sa.BOOLEAN(), nullable=True),
    sa.Column('paid_on', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('transaction_type', sa.VARCHAR(length=50), nullable=False),
    sa.Column('transaction_category', sa.VARCHAR(length=50), nullable=False),
    sa.Column('amount', sa.FLOAT(), nullable=False),
    sa.Column('date', sa.DATE(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
